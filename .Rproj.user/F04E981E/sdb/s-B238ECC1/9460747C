{
    "collab_server" : "",
    "contents" : "# 오칙연산\n1+1\na <- 1\na\nb <- 2\nb\nvec01 <- c(1,2,3,7)\nvec01\nvec02 <- c(1:5)\nvec02\nvec03 <- seq(1,5)\nvec03\nvec04 <- 1:5\nvec04\nvec05 <- seq(1L,10L, by=2)\nvec05\nclass(vec05)\nvec06 <- c(\"안\",\"녕\")\nvec06\nclass(vec06)\nvec06 <- 1:3\nmean(vec06)\nclass(vec06)\n## 5 + 7 더하기 로직을 구하시오\nx <- 5\ny <- 7\n## 5 + 7 더하기 로직을 식까지 보이도록 구하시오\ncat(x,\"+\",y,\"=\",x+y)\n## 더하기 로직을 구하시오\nplus <- function(x,y){return(x+y)}\nplus(9,2)\nminus <- function(x,y){return(x-y)}\nminus(9,2)\nmulti <- function(x,y){return(x*y)}\nmulti(9,2)\ndivid <- function(x,y){return(x%/%y)}\nplus(9,2)\nremainder <- function(x,y){return(x%%y)}\nplus(9,2)\n\n\n\n## assignment <- : 할당\n## branch : 분기문\n## loop : 반복문 \n## if - else 구문:: 함수 만들기 전\nx = 20\nop <- \"+\"\ny = 3\nif(op==\"+\")cat(x,op,y,\"=\",x+y)else\n  if(op==\"-\")cat(x,op,y,\"=\",x-y)else\n    if(op==\"*\")cat(x,op,y,\"=\",x*y)else\n      if(op==\"/\")cat(x,op,y,\"=\",x%/%y)else\n        if(op==\"%\")cat(x,op,y,\"=\",x%%y)else\n          print(\"error\")\n\n## switch 구문:: 함수 만들기 전\nx = 20\nop <- \"*\"\ny = 3\nswitch(\n  op,\n  \"+\"=cat(x,op,y,\"=\",x+y),\n  \"-\"=cat(x,op,y,\"=\",x-y),\n  \"*\"=cat(x,op,y,\"=\",x*y),\n  \"/\"=cat(x,op,y,\"=\",x%/%y),\n  \"%\"=cat(x,op,y,\"=\",x%%y),\n  \"error\"\n)\n\n\n\n## if - else 구문:: 함수 \n## \ncalc <- function(x,op,y){\n  res<-if(op==\"+\")x+y else\n    if(op==\"-\")x-y else\n      if(op==\"*\")x*y else\n        if(op==\"/\")x%/%y else\n          if(op==\"%\") x%%y else\n            \"error\"\n  return (cat(x,op,y,\"=\",res))\n}\ncalc(2,\"*\",3)\ncalc(3,\"*\",3)\ncalc(4,\"*\",3)\ncalc(5,\"*\",3)\n\n\n## switch 구문:: 함수 \ncalc <- function(x,op,y){\n  res <-switch(\n    op,\n    \"9\"=\"A\",\n    \"8\"=\"B\",\n    \"-\"=x-y,\n    \"*\"=x*y,\n    \"/\"=x%/%y,\n    \"%\"=x%%y,\n    \"error\"\n  )\n  return (cat(x,op,y,\"=\",res))\n}\n\n\n\n# R 언어에는 객체타입 대표 6로\n# Vector, List, Matrix, Array, Factor, Data Frame\n# 이 있고... 이들은 Vector 가 확장합니다.\n# Vector 는 다시 6개 기본타입에 따라 \n# Logical(T,F), Numeric(실수), Integer(정수), \n# Complex (허수), Character (문자열), Raw (주소값)\n# 로 종류가 나뉘는데 보통은 \n# Logical, Numeric, Character 세가지가 쓰입니다\n\n## 월요일 문제\n# 체질량 지수(體質量指數, Body Mass Index, BMI)는 인간의 비만도를 나타내는 지수로, \n# 체중과 키의 관계로 계산된다.\n# 키가 t 미터, 체중이 w 킬로그램일 때, BMI는 다음과 같다.\n# (키의 단위가 센티미터가 아닌 미터임에 유의해야 한다.)\n# 공식은 https://ko.wikipedia.org/wiki/%EC%B2%B4%EC%A7%88%EB%9F%89_%EC%A7%80%EC%88%98\n# 가면 구할 수 있습니다.\n# 이 BMI 지수를 구하는 Function 객체를 구하시오\n# 이 문제는 스위치버전은 구할수 없고 if-else 버전만 가능합니다.\n\nx <- 180 # 키\ny <- 70 # 몸무게\nbmi <- function(x,y){return ()}\n\nres <- bmi(180, 70)\nres\n# '정상' 으로 나오도록 코드를 완성하시오\n\ngetwd()\n",
    "created" : 1531533802881.000,
    "dirty" : true,
    "encoding" : "CP949",
    "folds" : "",
    "hash" : "1291422986",
    "id" : "9460747C",
    "lastKnownWriteTime" : 1531535515,
    "last_content_update" : 1531535605887,
    "path" : "C:/Users/User/Desktop/R 이젠/180707.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}